# Generated by Django 2.2.7 on 2022-11-08 04:30

import api.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvertisementMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_logo', models.ImageField(upload_to='media/ads/brandlogo')),
                ('brand_name', models.CharField(max_length=200)),
                ('campaign_title', models.CharField(max_length=200)),
                ('call_to_action', models.CharField(max_length=200)),
                ('poster', models.CharField(max_length=2000)),
                ('poster_type', models.CharField(max_length=50)),
                ('thumbnail', models.CharField(max_length=2000)),
                ('ad_clickURL', models.CharField(max_length=2000)),
                ('start_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField()),
                ('rank', models.IntegerField(db_index=True)),
                ('is_active', models.BooleanField(default=True)),
                ('app_place', models.CharField(max_length=100)),
                ('duration_in_second', models.IntegerField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_on', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('status', models.CharField(max_length=50)),
                ('ticket_count', models.IntegerField(blank=True, default=None, null=True)),
                ('ticket_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('is_avail', models.BooleanField(blank=True, default=None, null=True)),
                ('avail_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=1000)),
                ('subvalue', models.CharField(max_length=1000)),
                ('morevalue', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Discounts',
            fields=[
                ('discountsId', models.AutoField(primary_key=True, serialize=False)),
                ('discount_type', models.CharField(choices=[('discount_on_total_bill', 'Discount On Total Bill'), ('discount_on_equipment_or_item', 'Discount On Equipment Or Item'), ('advance_and_discount_confirmation', 'Advance And Discount Confirmation')], max_length=50)),
                ('discount', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('event_type', models.CharField(max_length=50)),
                ('event_category', models.CharField(max_length=100)),
                ('is_other', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gst', models.FileField(blank=True, max_length=255, null=True, upload_to='image/events/company/gst')),
                ('contact_no', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('about', models.TextField()),
                ('flat_no', models.CharField(max_length=255)),
                ('street', models.CharField(max_length=255)),
                ('area', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('pincode', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('flat_no', models.CharField(blank=True, max_length=100, null=True)),
                ('street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('area_name', models.CharField(blank=True, max_length=255, null=True)),
                ('location_address', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(max_length=2000)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('pincode', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999)])),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('permission_letter', models.FileField(blank=True, null=True, upload_to='media/file/permission_letter')),
                ('accept_booking', models.BooleanField(default=False)),
                ('location_type', models.CharField(max_length=100)),
                ('occupancy_type', models.CharField(max_length=50)),
                ('capacity', models.IntegerField()),
                ('poster', models.FileField(blank=True, null=True, upload_to='media/image/poster')),
                ('status', models.CharField(choices=[('SAVE', api.models.StatusChoice('SAVE')), ('SUBMIT', api.models.StatusChoice('SUBMIT')), ('UNPAID', api.models.StatusChoice('UNPAID'))], max_length=100)),
                ('is_verify', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=1000)),
                ('sold', models.IntegerField(default=0)),
                ('is_food', models.BooleanField(default=False)),
                ('food_type', models.CharField(max_length=100, null=True)),
                ('food_description', models.CharField(max_length=500, null=True)),
                ('is_equipment', models.BooleanField(default=False)),
                ('equipment_description', models.CharField(max_length=500, null=True)),
                ('t_and_c', models.TextField(max_length=5000)),
                ('facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('pinterest', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('calender', models.CharField(max_length=255)),
                ('live', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Event')),
            ],
        ),
        migrations.CreateModel(
            name='FrequentlyAskedQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=512)),
                ('answer', models.CharField(max_length=2000)),
                ('is_active', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(null=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('end_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HelpAndFaqs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocalOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('poster', models.ImageField(max_length=1000, upload_to='media/image/local_offer/poster')),
                ('offer_name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('no_of_days', models.IntegerField()),
                ('is_verify', models.BooleanField(default=False)),
                ('accept_booking', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('SAVE', api.models.StatusChoice('SAVE')), ('SUBMIT', api.models.StatusChoice('SUBMIT')), ('UNPAID', api.models.StatusChoice('UNPAID'))], max_length=100)),
                ('sold', models.IntegerField(default=0)),
                ('offer_on_product_type', models.CharField(choices=[('ALL', api.models.ProductTypeChoice('ALL')), ('SPECIFIC', api.models.ProductTypeChoice('SPECIFIC'))], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LocalOfferBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=50)),
                ('rank_number', models.IntegerField()),
                ('expire', models.DateTimeField()),
                ('is_avail', models.BooleanField()),
                ('avail_datetime', models.DateTimeField()),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LocalOffer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Marketing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, default='/media/image/marketing/default.png', upload_to='media/image/marketing')),
                ('time', models.TimeField()),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('is_delivary', models.BooleanField(default=False)),
                ('is_pending', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, max_length=5000)),
                ('image', models.FileField(blank=True, max_length=255, upload_to='media/image/notification')),
                ('notification_type', models.CharField(choices=[('1', 'SMS'), ('2', 'NOTIFICATION'), ('3', 'EMAIL')], default=1, max_length=10)),
                ('forwhat', models.CharField(blank=True, max_length=255, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrgDiscounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(choices=[('discount_on_total_bill', 'Discount On Total Bill'), ('discount_on_equipment_or_item', 'Discount On Equipment Or Item'), ('advance_and_discount_confirmation', 'Advance And Discount Confirmation')], max_length=50)),
                ('discount', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_id', to='api.Event')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OurProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('current_index', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_payment_id', models.CharField(max_length=200, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PosterCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=250)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PosterMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumnail', models.ImageField(upload_to='media/buy/poster/thumnail')),
                ('svg', models.FileField(upload_to='media/buy/poster/svg')),
                ('is_active', models.BooleanField(default=True)),
                ('default_discount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', api.models.DiscountChoice('PERCENTAGE')), ('AMOUNT', api.models.DiscountChoice('AMOUNT'))], max_length=100)),
                ('content_text', models.CharField(max_length=100, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PosterCategory')),
            ],
        ),
        migrations.CreateModel(
            name='PosterPriceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='PriceMatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('event_reg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
            ],
        ),
        migrations.CreateModel(
            name='SeatingArrangementMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('svg', models.FileField(upload_to='media/image/events/seating_arrangement', validators=[api.models.validate_svg])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sequence', models.IntegerField(default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShopCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('no_of_post', models.IntegerField()),
                ('max_days', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('validity_days', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='WishlistOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.LocalOffer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WishlistOccation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
                ('occasion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBankDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('gst_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Account_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('ifsc_code', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('branch_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('mobile_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=None, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='media/image/product/icon')),
                ('is_active', models.BooleanField(default=True)),
                ('timestampe', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic', to='api.OurProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('status', models.CharField(max_length=50)),
                ('number', models.IntegerField(blank=True, default=None, null=True)),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Attendee')),
                ('price_matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PriceMatrix')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('no_of_post', models.IntegerField()),
                ('used_post', models.IntegerField()),
                ('max_days', models.IntegerField()),
                ('used_days', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('payment_status', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField()),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PaymentTransaction')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SubscriptionMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=256)),
                ('shop_start_time', models.TimeField()),
                ('shop_end_time', models.TimeField()),
                ('week_days', models.CharField(max_length=7)),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('address', models.CharField(max_length=2000)),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(max_length=255, null=True)),
                ('pincode', models.PositiveIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(999999)])),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ShopCategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SeatingArrangementBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('no_of_seat', models.IntegerField()),
                ('seat_location', models.CharField(choices=[('TOP', api.models.SeatVerticalLocationChoice('TOP')), ('CENTER', api.models.SeatVerticalLocationChoice('CENTER')), ('BOTTOM', api.models.SeatVerticalLocationChoice('BOTTOM'))], max_length=100)),
                ('seat_side', models.CharField(choices=[('NONE', api.models.SeatHorizontalLocationChoice('NONE')), ('LEFT', api.models.SeatHorizontalLocationChoice('LEFT')), ('RIGHT', api.models.SeatHorizontalLocationChoice('RIGHT'))], max_length=100)),
                ('table_person_capacity', models.IntegerField(blank=True, null=True)),
                ('person_capacity', models.IntegerField(blank=True, null=True)),
                ('table_price', models.IntegerField(blank=True, null=True)),
                ('price_per_seat', models.DecimalField(decimal_places=2, max_digits=7)),
                ('total_booking_count', models.IntegerField(null=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('booking_acceptance', models.CharField(choices=[('PERTABLE', api.models.BookingAcceptance('PERTABLE')), ('PERPERSON', api.models.BookingAcceptance('PERPERSON'))], max_length=100)),
                ('seat_food', models.CharField(choices=[('VEG', api.models.SeatFoodChoice('VEG')), ('NONVEG', api.models.SeatFoodChoice('NONVEG')), ('BOTH', api.models.SeatFoodChoice('BOTH')), ('NONE', api.models.SeatFoodChoice('NONE'))], max_length=100)),
                ('seat_food_description', models.CharField(blank=True, max_length=2000, null=True)),
                ('seat_equipment', models.BooleanField(default=False)),
                ('seat_equipment_description', models.CharField(blank=True, max_length=2000, null=True)),
                ('occasion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SeatingArrangementMaster')),
            ],
        ),
        migrations.CreateModel(
            name='PosterTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', api.models.DiscountChoice('PERCENTAGE')), ('AMOUNT', api.models.DiscountChoice('AMOUNT'))], max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=50)),
                ('our_payment_id', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=200, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=200, null=True)),
                ('display_discount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('display_discount_type', models.CharField(choices=[('PERCENTAGE', api.models.DiscountChoice('PERCENTAGE')), ('AMOUNT', api.models.DiscountChoice('AMOUNT'))], max_length=100)),
                ('display_content_text', models.CharField(max_length=100, null=True)),
                ('coin_used', models.IntegerField(null=True)),
                ('coin_used_amount', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LocalOffer')),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PosterMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PosterPriceCategoryDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField()),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', api.models.DiscountChoice('PERCENTAGE')), ('AMOUNT', api.models.DiscountChoice('AMOUNT'))], max_length=100)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_active', models.BooleanField(default=True)),
                ('price_categorty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PosterPriceCategory')),
            ],
        ),
        migrations.AddField(
            model_name='postermaster',
            name='price_categorty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PosterPriceCategory'),
        ),
        migrations.CreateModel(
            name='OrgEquipmentId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('equipment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_id', to='api.SeatingArrangementBooking')),
                ('orgdiscount_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgdiscount_id', to='api.OrgDiscounts')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizerEventVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='media/video/organizereventvideo')),
                ('thumbnail', models.ImageField(upload_to='media/video/thumbnail/organizereventvideo')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizereventvideo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('capacity_type', models.CharField(choices=[('UNLIMITED', api.models.CapacityTypeChoice('UNLIMITED')), ('SPECIFIC', api.models.CapacityTypeChoice('SPECIFIC'))], max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('local_offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LocalOffer')),
            ],
        ),
        migrations.CreateModel(
            name='Offer_Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('number', models.IntegerField()),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', api.models.DiscountChoice('PERCENTAGE')), ('AMOUNT', api.models.DiscountChoice('AMOUNT'))], max_length=100)),
                ('sold', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Offer_Product')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userIds', models.TextField(max_length=50000, null=True)),
                ('status', models.CharField(choices=[('1', 'panding'), ('2', 'send')], default=1, max_length=10)),
                ('selected_page', models.TextField(max_length=5000, null=True)),
                ('notification_type', models.TextField(max_length=50000, null=True)),
                ('notification_title', models.TextField(max_length=5000, null=True)),
                ('notification_text', models.TextField(max_length=5000, null=True)),
                ('notification_img', models.FileField(blank=True, max_length=255, upload_to='media/image/notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocalOfferBookingProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_number', models.IntegerField()),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LocalOfferBooking')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Offer_Discount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Offer_Product')),
            ],
        ),
        migrations.CreateModel(
            name='LocalOffer_Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='media/video/local_offer')),
                ('thumbnail', models.ImageField(upload_to='media/video/thumbnail/local_offer')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('local_offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LocalOffer')),
            ],
        ),
        migrations.CreateModel(
            name='LocalOffer_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/image/local_offer')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Offer_Product')),
            ],
        ),
        migrations.AddField(
            model_name='localoffer',
            name='shop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Shop'),
        ),
        migrations.AddField(
            model_name='localoffer',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SubscriptionTransaction'),
        ),
        migrations.CreateModel(
            name='LiveStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=255)),
                ('event_category', models.CharField(max_length=100)),
                ('event_description', models.TextField()),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('gst_no_our', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('gst_no_org', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('trans_date', models.DateTimeField(auto_now_add=True)),
                ('gst_rate', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gst_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('commission_rate', models.DecimalField(decimal_places=2, max_digits=7)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('status', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('event_reg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='media/video/events')),
                ('description', models.TextField()),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='media/video/thumbnail/events')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_reg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
            ],
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='orgdiscountsId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.OrgDiscounts'),
        ),
        migrations.CreateModel(
            name='EventPersonalDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('mobile_no', models.CharField(max_length=20)),
                ('is_mobile_hidden', models.BooleanField(default=False)),
                ('alt_mobile_no', models.CharField(blank=True, max_length=20, null=True)),
                ('is_alt_mobile_hidden', models.BooleanField(default=False)),
                ('email', models.CharField(max_length=100)),
                ('is_email_hidden', models.BooleanField(default=True)),
                ('flat_no', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_reg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
            ],
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='media/image/events')),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_reg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(blank=True, null=True, upload_to='image/events/company/video')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='api.EventCompanyDetails')),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/events/company')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='api.EventCompanyDetails')),
            ],
        ),
        migrations.AddField(
            model_name='eventcompanydetails',
            name='event_reg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration'),
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('email', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('remark', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('complain_type', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('app_version', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsAndRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=16, default=0.0, max_digits=22)),
                ('avg_rating', models.DecimalField(decimal_places=16, default=0.0, max_digits=22)),
                ('user_rating', models.DecimalField(decimal_places=16, default=0.0, max_digits=22)),
                ('avg_user_rating', models.DecimalField(decimal_places=16, default=0.0, max_digits=22)),
                ('title', models.CharField(max_length=254)),
                ('review', models.CharField(blank=True, max_length=2000, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_replay', models.BooleanField(default=False)),
                ('replay_title', models.CharField(max_length=254)),
                ('replay_review', models.CharField(blank=True, max_length=2000, null=True)),
                ('replay_timestamp', models.DateTimeField(auto_now_add=True)),
                ('replay_persion', models.CharField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('occasion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration')),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.LocalOffer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoinSummaryLedger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_coin', models.IntegerField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('redeem_coin', models.IntegerField()),
                ('redeem_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoinLedger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_coin', models.IntegerField()),
                ('trans_timestamp', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('LOGIN', api.models.CoinLedgerChoice('LOGIN')), ('LOGIN_REFER', api.models.CoinLedgerChoice('LOGIN_REFER')), ('REFERED', api.models.CoinLedgerChoice('REFERED')), ('REDEEM', api.models.CoinLedgerChoice('REDEEM')), ('POSTER_REDEEM', api.models.CoinLedgerChoice('POSTER_REDEEM')), ('COIN_SEND', api.models.CoinLedgerChoice('COIN_SEND')), ('COIN_RECEIVE', api.models.CoinLedgerChoice('COIN_RECEIVE'))], max_length=100)),
                ('trans_type', models.CharField(choices=[('DEBIT', api.models.CoinTransType('DEBIT')), ('DEBIT', api.models.CoinTransType('DEBIT'))], max_length=100)),
                ('redeem_upi', models.CharField(blank=True, max_length=500, null=True)),
                ('redeem_status', models.CharField(choices=[('INIT', api.models.CoinRedeemStatus('INIT')), ('PROCESSING', api.models.CoinRedeemStatus('PROCESSING')), ('FAILED', api.models.CoinRedeemStatus('FAILED')), ('SUCCESSFULL', api.models.CoinRedeemStatus('SUCCESSFULL'))], max_length=100)),
                ('remark', models.CharField(blank=True, max_length=2000, null=True)),
                ('transcation_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('receive_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coinledger_receive_from', to=settings.AUTH_USER_MODEL)),
                ('receive_on_behalf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coinledger_receive_on_behalf', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api.State')),
            ],
        ),
        migrations.CreateModel(
            name='ChatBot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=5000)),
                ('reply', models.TextField(blank=True, max_length=5000)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='attendee',
            name='event_reg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.EventRegistration'),
        ),
        migrations.AddField(
            model_name='attendee',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PaymentTransaction'),
        ),
        migrations.AddField(
            model_name='attendee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AdTransactionSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('last_use', models.DateTimeField(auto_now=True)),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.AdvertisementMaster')),
            ],
        ),
        migrations.CreateModel(
            name='AdTransactionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_date', models.DateTimeField(auto_now=True)),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.AdvertisementMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
